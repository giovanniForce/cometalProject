{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/grid-list\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../card/card.component\";\n\nfunction DashComponent_mat_grid_tile_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 4);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"app-card\", 6);\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5, \"Mini Card Content Here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"colspan\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 3, ctx_r0.cardLayout)) == null ? null : tmp_0_0.miniCard.cols)(\"rowspan\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 5, ctx_r0.cardLayout)) == null ? null : tmp_1_0.miniCard.rows);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"Card \", i_r2, \"\");\n  }\n}\n\nfunction DashComponent_mat_grid_tile_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 4);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementStart(3, \"app-card\", 6);\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5, \"Chart Content Here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵproperty(\"colspan\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 3, ctx_r1.cardLayout)) == null ? null : tmp_0_0.chart.cols)(\"rowspan\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 5, ctx_r1.cardLayout)) == null ? null : tmp_1_0.chart.rows);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"title\", \"Card \", i_r3, \"\");\n  }\n}\n\nconst _c0 = function () {\n  return [1, 2, 3, 4];\n};\n\nconst _c1 = function () {\n  return [5, 6, 7, 8];\n};\n\nexport class DashComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    this.cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n      matches\n    }) => {\n      if (matches) {\n        return {\n          columns: 1,\n          miniCard: {\n            cols: 1,\n            rows: 1\n          },\n          chart: {\n            cols: 1,\n            rows: 2\n          },\n          table: {\n            cols: 1,\n            rows: 4\n          }\n        };\n      }\n\n      return {\n        columns: 4,\n        miniCard: {\n          cols: 1,\n          rows: 1\n        },\n        chart: {\n          cols: 2,\n          rows: 2\n        },\n        table: {\n          cols: 4,\n          rows: 4\n        }\n      };\n    }));\n  }\n\n}\n\nDashComponent.ɵfac = function DashComponent_Factory(t) {\n  return new (t || DashComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nDashComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashComponent,\n  selectors: [[\"app-dash\"]],\n  decls: 13,\n  vars: 13,\n  consts: [[1, \"grid-container\"], [1, \"mat-h1\"], [\"rowHeight\", \"200px\", 3, \"cols\"], [3, \"colspan\", \"rowspan\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"], [\"title\", \"Card 9\"], [3, \"title\"]],\n  template: function DashComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-grid-list\", 2);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵtemplate(5, DashComponent_mat_grid_tile_5_Template, 6, 7, \"mat-grid-tile\", 3);\n      i0.ɵɵtemplate(6, DashComponent_mat_grid_tile_6_Template, 6, 7, \"mat-grid-tile\", 3);\n      i0.ɵɵelementStart(7, \"mat-grid-tile\", 4);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementStart(10, \"app-card\", 5);\n      i0.ɵɵelementStart(11, \"div\");\n      i0.ɵɵtext(12, \"Table Content Here\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_0_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"cols\", (tmp_0_0 = i0.ɵɵpipeBind1(4, 5, ctx.cardLayout)) == null ? null : tmp_0_0.columns);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(11, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(12, _c1));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"colspan\", (tmp_3_0 = i0.ɵɵpipeBind1(8, 7, ctx.cardLayout)) == null ? null : tmp_3_0.table.cols)(\"rowspan\", (tmp_4_0 = i0.ɵɵpipeBind1(9, 9, ctx.cardLayout)) == null ? null : tmp_4_0.table.rows);\n    }\n  },\n  directives: [i2.MatGridList, i3.NgForOf, i2.MatGridTile, i4.CardComponent],\n  pipes: [i3.AsyncPipe],\n  styles: [\".grid-container[_ngcontent-%COMP%] {\\n  margin: 20px;\\n}\\n\\n.dashboard-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0FBQ0YiLCJmaWxlIjoiZGFzaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmlkLWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMjBweDtcbn1cblxuLmRhc2hib2FyZC1jYXJkIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDE1cHg7XG4gIGxlZnQ6IDE1cHg7XG4gIHJpZ2h0OiAxNXB4O1xuICBib3R0b206IDE1cHg7XG59XG5cbi5tb3JlLWJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1cHg7XG4gIHJpZ2h0OiAxMHB4O1xufVxuXG4uZGFzaGJvYXJkLWNhcmQtY29udGVudCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/home/giovanni/Documents/frontend/front/src/app/pages/dash/dash.component.ts","/home/giovanni/Documents/frontend/front/src/app/pages/dash/dash.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.scss']\n})\nexport class DashComponent {\n  \n  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches!) {\n        return {\n          columns: 1,\n          miniCard: { cols: 1, rows: 1 },\n          chart: { cols: 1, rows: 2 },\n          table: { cols: 1, rows: 4 },\n        };\n      }\n\n      return {\n        columns: 4,\n        miniCard: { cols: 1, rows: 1 },\n        chart: { cols: 2, rows: 2 },\n        table: { cols: 4, rows: 4 },\n      };\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<!--dash.component.html-->\n<div class=\"grid-container\">\n <h1 class=\"mat-h1\">Dashboard</h1>\n <mat-grid-list cols=\"{{ ( cardLayout | async )?.columns }}\" rowHeight=\"200px\">\n   <!--Mini Cards-->\n   <mat-grid-tile *ngFor=\"let i of [1, 2, 3, 4]\" [colspan]=\"( cardLayout | async )?.miniCard.cols\"\n     [rowspan]=\"( cardLayout | async )?.miniCard.rows\">\n     <app-card title=\"Card {{i}}\"><div>Mini Card Content Here</div></app-card>\n   </mat-grid-tile>\n   <!--Charts-->\n   <mat-grid-tile *ngFor=\"let i of [5, 6, 7, 8]\" [colspan]=\"( cardLayout | async )?.chart.cols\"\n     [rowspan]=\"( cardLayout | async )?.chart.rows\">\n     <app-card title=\"Card {{i}}\"><div>Chart Content Here</div></app-card>\n   </mat-grid-tile>\n   <!--Table-->\n   <mat-grid-tile [colspan]=\"( cardLayout | async )?.table.cols\" [rowspan]=\"( cardLayout | async )?.table.rows\">\n     <app-card title=\"Card 9\"><div>Table Content Here</div></app-card>\n   </mat-grid-tile>\n </mat-grid-list>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}