{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/grid-list\";\nimport * as i3 from \"../card/card.component\";\nimport * as i4 from \"../charts/annual-demande-resolved-chart/annual-demande-resolved-chart.component\";\nimport * as i5 from \"../charts/demandes-chart/demandes-chart.component\";\nimport * as i6 from \"../charts/demande-resolved-traffic-chart/demande-resolved-traffic-chart.component\";\nimport * as i7 from \"../charts/equipement-att-sessions-chart/equipement-att-sessions-chart.component\";\nimport * as i8 from \"@angular/common\";\nexport class DashComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    /** Based on the screen size, switch from standard to one column per row */\n\n    this.cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n      matches\n    }) => {\n      if (matches) {\n        return {\n          columns: 1,\n          miniCard: {\n            cols: 1,\n            rows: 1\n          },\n          chart: {\n            cols: 1,\n            rows: 2\n          },\n          table: {\n            cols: 1,\n            rows: 4\n          }\n        };\n      }\n\n      return {\n        columns: 4,\n        miniCard: {\n          cols: 1,\n          rows: 1\n        },\n        chart: {\n          cols: 2,\n          rows: 2\n        },\n        table: {\n          cols: 4,\n          rows: 4\n        }\n      };\n    }));\n  }\n\n}\n\nDashComponent.ɵfac = function DashComponent_Factory(t) {\n  return new (t || DashComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nDashComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashComponent,\n  selectors: [[\"app-dash\"]],\n  decls: 21,\n  vars: 24,\n  consts: [[3, \"colspan\", \"rowspan\"], [\"title\", \"Monthly demandResolved\"], [\"title\", \"demandes\"], [\"title\", \"demandResolved Traffic Source\"], [\"title\", \"Equipement Sessions by Traffic Source\"]],\n  template: function DashComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-grid-tile\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementStart(3, \"app-card\", 1);\n      i0.ɵɵelement(4, \"app-annual-demande-resolved-chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-grid-tile\", 0);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementStart(8, \"app-card\", 2);\n      i0.ɵɵelement(9, \"app-demandes-chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-grid-tile\", 0);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementStart(13, \"app-card\", 3);\n      i0.ɵɵelement(14, \"app-demande-resolved-traffic-chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-grid-tile\", 0);\n      i0.ɵɵpipe(16, \"async\");\n      i0.ɵɵpipe(17, \"async\");\n      i0.ɵɵelementStart(18, \"app-card\", 4);\n      i0.ɵɵelement(19, \"app-equipement-att-sessions-chart\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(20, \" ...\");\n    }\n\n    if (rf & 2) {\n      let tmp_0_0;\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      i0.ɵɵproperty(\"colspan\", (tmp_0_0 = i0.ɵɵpipeBind1(1, 8, ctx.cardLayout)) == null ? null : tmp_0_0.chart == null ? null : tmp_0_0.chart.cols)(\"rowspan\", (tmp_1_0 = i0.ɵɵpipeBind1(2, 10, ctx.cardLayout)) == null ? null : tmp_1_0.chart == null ? null : tmp_1_0.chart.rows);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"colspan\", (tmp_2_0 = i0.ɵɵpipeBind1(6, 12, ctx.cardLayout)) == null ? null : tmp_2_0.chart == null ? null : tmp_2_0.chart.cols)(\"rowspan\", (tmp_3_0 = i0.ɵɵpipeBind1(7, 14, ctx.cardLayout)) == null ? null : tmp_3_0.chart == null ? null : tmp_3_0.chart.rows);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"colspan\", (tmp_4_0 = i0.ɵɵpipeBind1(11, 16, ctx.cardLayout)) == null ? null : tmp_4_0.chart == null ? null : tmp_4_0.chart.cols)(\"rowspan\", (tmp_5_0 = i0.ɵɵpipeBind1(12, 18, ctx.cardLayout)) == null ? null : tmp_5_0.chart == null ? null : tmp_5_0.chart.rows);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"colspan\", (tmp_6_0 = i0.ɵɵpipeBind1(16, 20, ctx.cardLayout)) == null ? null : tmp_6_0.chart == null ? null : tmp_6_0.chart.cols)(\"rowspan\", (tmp_7_0 = i0.ɵɵpipeBind1(17, 22, ctx.cardLayout)) == null ? null : tmp_7_0.chart == null ? null : tmp_7_0.chart.rows);\n    }\n  },\n  directives: [i2.MatGridTile, i3.CardComponent, i4.AnnualDemandeResolvedChartComponent, i5.DemandesChartComponent, i6.DemandeResolvedTrafficChartComponent, i7.EquipementAttSessionsChartComponent],\n  pipes: [i8.AsyncPipe],\n  styles: [\".grid-container[_ngcontent-%COMP%] {\\n  margin: 20px;\\n}\\n\\n.dashboard-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0FBQ0YiLCJmaWxlIjoiZGFzaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmlkLWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMjBweDtcbn1cblxuLmRhc2hib2FyZC1jYXJkIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDE1cHg7XG4gIGxlZnQ6IDE1cHg7XG4gIHJpZ2h0OiAxNXB4O1xuICBib3R0b206IDE1cHg7XG59XG5cbi5tb3JlLWJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1cHg7XG4gIHJpZ2h0OiAxMHB4O1xufVxuXG4uZGFzaGJvYXJkLWNhcmQtY29udGVudCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/home/giovanni/Documents/frontend/front/src/app/pages/dash/dash.component.ts","/home/giovanni/Documents/frontend/front/src/app/pages/dash/dash.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.scss']\n})\nexport class DashComponent {\n  public matches : any;\n  \n  /** Based on the screen size, switch from standard to one column per row */\n  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return {\n          columns: 1,\n          miniCard: { cols: 1, rows: 1 },\n          chart: { cols: 1, rows: 2 },\n          table: { cols: 1, rows: 4 },\n        };\n      }\n \n     return {\n        columns: 4,\n        miniCard: { cols: 1, rows: 1 },\n        chart: { cols: 2, rows: 2 },\n        table: { cols: 4, rows: 4 },\n      };\n    })\n  );\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","\n<!--Charts-->\n<mat-grid-tile [colspan]=\"( cardLayout | async )?.chart?.cols\" [rowspan]=\"( cardLayout | async )?.chart?.rows\">\n   <app-card title=\"Monthly demandResolved\">\n       <app-annual-demande-resolved-chart></app-annual-demande-resolved-chart>\n   </app-card>\n</mat-grid-tile>\n<mat-grid-tile [colspan]=\"( cardLayout | async )?.chart?.cols\" [rowspan]=\"( cardLayout | async )?.chart?.rows\">\n   <app-card title=\"demandes\">\n       <app-demandes-chart></app-demandes-chart>\n   </app-card>\n</mat-grid-tile>\n<mat-grid-tile [colspan]=\"( cardLayout | async )?.chart?.cols\" [rowspan]=\"( cardLayout | async )?.chart?.rows\">\n   <app-card title=\"demandResolved Traffic Source\">\n       <app-demande-resolved-traffic-chart></app-demande-resolved-traffic-chart>\n   </app-card>\n</mat-grid-tile>\n<mat-grid-tile [colspan]=\"( cardLayout | async )?.chart?.cols\" [rowspan]=\"( cardLayout | async )?.chart?.rows\">\n   <app-card title=\"Equipement Sessions by Traffic Source\">\n       <app-equipement-att-sessions-chart></app-equipement-att-sessions-chart>\n   </app-card>\n</mat-grid-tile>\n\n..."],"sourceRoot":""},"metadata":{},"sourceType":"module"}