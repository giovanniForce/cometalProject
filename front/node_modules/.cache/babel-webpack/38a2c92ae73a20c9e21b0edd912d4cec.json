{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nexport class DashComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    /** Based on the screen size, switch from standard to one column per row */\n\n    this.cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(({\n      matches\n    }) => {\n      if (matches) {\n        return {\n          columns: 1,\n          miniCard: {\n            cols: 1,\n            rows: 1\n          },\n          chart: {\n            cols: 1,\n            rows: 2\n          },\n          table: {\n            cols: 1,\n            rows: 4\n          }\n        };\n      }\n\n      return {\n        columns: 4,\n        miniCard: {\n          cols: 1,\n          rows: 1\n        },\n        chart: {\n          cols: 2,\n          rows: 2\n        },\n        table: {\n          cols: 4,\n          rows: 4\n        }\n      };\n    }));\n  }\n\n}\n\nDashComponent.ɵfac = function DashComponent_Factory(t) {\n  return new (t || DashComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nDashComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashComponent,\n  selectors: [[\"app-dash\"]],\n  decls: 6,\n  vars: 5,\n  consts: [[1, \"grid-container\"], [1, \"mat-h1\"]],\n  template: function DashComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"json\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_0_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 1, (tmp_0_0 = i0.ɵɵpipeBind1(5, 3, ctx.cardLayout)) == null ? null : tmp_0_0.miniCard), \" \");\n    }\n  },\n  pipes: [i2.JsonPipe, i2.AsyncPipe],\n  styles: [\".grid-container[_ngcontent-%COMP%] {\\n  margin: 20px;\\n}\\n\\n.dashboard-card[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2guY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7QUFDRjs7QUFFQTtFQUNFLGtCQUFBO0FBQ0YiLCJmaWxlIjoiZGFzaC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ncmlkLWNvbnRhaW5lciB7XG4gIG1hcmdpbjogMjBweDtcbn1cblxuLmRhc2hib2FyZC1jYXJkIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDE1cHg7XG4gIGxlZnQ6IDE1cHg7XG4gIHJpZ2h0OiAxNXB4O1xuICBib3R0b206IDE1cHg7XG59XG5cbi5tb3JlLWJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1cHg7XG4gIHJpZ2h0OiAxMHB4O1xufVxuXG4uZGFzaGJvYXJkLWNhcmQtY29udGVudCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/home/giovanni/Documents/frontend/front/src/app/pages/dash/dash.component.ts","/home/giovanni/Documents/frontend/front/src/app/pages/dash/dash.component.html"],"names":[],"mappings":"AACA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,WAAT,QAAgD,qBAAhD;;;;AAOA,OAAM,MAAO,aAAP,CAAoB;AAuBxB,EAAA,WAAA,CAAoB,kBAApB,EAA0D;AAAtC,SAAA,kBAAA,GAAA,kBAAA;AApBpB;;AACA,SAAA,UAAA,GAAa,KAAK,kBAAL,CAAwB,OAAxB,CAAgC,WAAW,CAAC,OAA5C,EAAqD,IAArD,CACX,GAAG,CAAC,CAAC;AAAE,MAAA;AAAF,KAAD,KAAgB;AAClB,UAAI,OAAJ,EAAa;AACX,eAAO;AACL,UAAA,OAAO,EAAE,CADJ;AAEL,UAAA,QAAQ,EAAE;AAAE,YAAA,IAAI,EAAE,CAAR;AAAW,YAAA,IAAI,EAAE;AAAjB,WAFL;AAGL,UAAA,KAAK,EAAE;AAAE,YAAA,IAAI,EAAE,CAAR;AAAW,YAAA,IAAI,EAAE;AAAjB,WAHF;AAIL,UAAA,KAAK,EAAE;AAAE,YAAA,IAAI,EAAE,CAAR;AAAW,YAAA,IAAI,EAAE;AAAjB;AAJF,SAAP;AAMD;;AAEF,aAAO;AACJ,QAAA,OAAO,EAAE,CADL;AAEJ,QAAA,QAAQ,EAAE;AAAE,UAAA,IAAI,EAAE,CAAR;AAAW,UAAA,IAAI,EAAE;AAAjB,SAFN;AAGJ,QAAA,KAAK,EAAE;AAAE,UAAA,IAAI,EAAE,CAAR;AAAW,UAAA,IAAI,EAAE;AAAjB,SAHH;AAIJ,QAAA,KAAK,EAAE;AAAE,UAAA,IAAI,EAAE,CAAR;AAAW,UAAA,IAAI,EAAE;AAAjB;AAJH,OAAP;AAMA,KAhBE,CADQ,CAAb;AAmB8D;;AAvBtC;;;mBAAb,a,EAAa,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,kBAAA,C;AAAA,C;;;QAAb,a;AAAa,EAAA,SAAA,EAAA,CAAA,CAAA,UAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,QAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,sBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACR1B,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACC,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AAAmB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA;AAAS,MAAA,EAAA,CAAA,YAAA;AAC5B,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA;;;AAED,MAAA,EAAA,CAAA,YAAA;;;;;AAFC,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,OAAA,GAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,UAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,QAAA,CAAA,EAAA,GAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dash',\n  templateUrl: './dash.component.html',\n  styleUrls: ['./dash.component.scss']\n})\nexport class DashComponent {\n  public matches : any;\n  \n  /** Based on the screen size, switch from standard to one column per row */\n  cardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return {\n          columns: 1,\n          miniCard: { cols: 1, rows: 1 },\n          chart: { cols: 1, rows: 2 },\n          table: { cols: 1, rows: 4 },\n        };\n      }\n \n     return {\n        columns: 4,\n        miniCard: { cols: 1, rows: 1 },\n        chart: { cols: 2, rows: 2 },\n        table: { cols: 4, rows: 4 },\n      };\n    })\n  );\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<!--dash.component.html-->\n<div class=\"grid-container\">\n <h1 class=\"mat-h1\">Dashboard</h1>\n {{ ( cardLayout | async )?.miniCard | json }}\n\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}